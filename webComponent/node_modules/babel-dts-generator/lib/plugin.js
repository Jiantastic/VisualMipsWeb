'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plugin = plugin;

var _path = require('path');

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _fsUtils = require('./fs-utils');

var _generators = require('./generators');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symb = Symbol('dts-meta');

function withMeta(visitFn) {
  return function visit(path, _ref) {
    var metadata = _ref.file.metadata;

    var meta = metadata[symb];
    return visitFn(path, meta, metadata);
  };
}

var skipper = {
  enter: withMeta(function (path, _ref2) {
    var moduleExports = _ref2.moduleExports,
        skipStack = _ref2.skipStack,
        nodeGenerator = _ref2.nodeGenerator;

    //debugger;

    if (skipStack.length === 0) {
      moduleExports.push(nodeGenerator(path.node));
    }

    skipStack.push(path);
  }),

  exit: withMeta(function (path, _ref3) {
    var skipStack = _ref3.skipStack;

    //debugger;
    for (var i = skipStack.length - 1; i >= 0; i--) {
      var item = skipStack[i];
      if (item === path) {
        skipStack.splice(i, skipStack.length);
        return;
      }
    }

    throw new Error('skipStack error: path not found');
  })
};

function plugin(_ref4) {
  var t = _ref4.types;
  // eslint-disable-line
  return {
    visitor: {
      ExportAllDeclaration: withMeta(function (_ref5, _ref6) {
        var node = _ref5.node;
        var moduleExports = _ref6.moduleExports,
            nodeGenerator = _ref6.nodeGenerator;

        moduleExports.push(nodeGenerator(node));
      }),

      ExportNamedDeclaration: skipper,

      ExportDefaultDeclaration: skipper,

      ClassDeclaration: skipper,

      ImportDeclaration: withMeta(function (_ref7, _ref8) {
        var node = _ref7.node;
        var moduleImports = _ref8.moduleImports,
            nodeGenerator = _ref8.nodeGenerator;

        moduleImports.push(nodeGenerator(node));
      }),

      InterfaceDeclaration: withMeta(function (_ref9, _ref10) {
        var node = _ref9.node;
        var interfaces = _ref10.interfaces,
            nodeGenerator = _ref10.nodeGenerator;

        interfaces.push(nodeGenerator(node));
      }),

      Program: {
        exit: withMeta(function (path, meta, fileMeta) {
          var output = (0, _generators.generate)(meta, fileMeta);

          //debugger;
          if (!meta.dryRun) {
            (0, _fsUtils.ensureDir)(meta.outpath);
            _fs2.default.writeFileSync(meta.outpath, output);
          }

          //path.stop();
        })
      }
    },

    pre: function pre(file) {
      var opts = this.opts;

      var meta = {};
      var _file$opts = file.opts,
          filename = _file$opts.filename,
          moduleRoot = _file$opts.moduleRoot;
      var packageName = opts.packageName,
          typings = opts.typings,
          _opts$suppressModuleP = opts.suppressModulePath,
          suppressModulePath = _opts$suppressModuleP === undefined ? false : _opts$suppressModuleP,
          _opts$suppressComment = opts.suppressComments,
          suppressComments = _opts$suppressComment === undefined ? false : _opts$suppressComment,
          _opts$ignoreMembers = opts.ignoreMembers,
          ignoreMembers = _opts$ignoreMembers === undefined ? /^_.*/ : _opts$ignoreMembers,
          _opts$ignoreEmptyInte = opts.ignoreEmptyInterfaces,
          ignoreEmptyInterfaces = _opts$ignoreEmptyInte === undefined ? true : _opts$ignoreEmptyInte,
          _opts$ignoreEmptyClas = opts.ignoreEmptyClasses,
          ignoreEmptyClasses = _opts$ignoreEmptyClas === undefined ? false : _opts$ignoreEmptyClas,
          _opts$dryRun = opts.dryRun,
          dryRun = _opts$dryRun === undefined ? false : _opts$dryRun,
          _opts$markUnspecified = opts.markUnspecifiedAsOptional,
          markUnspecifiedAsOptional = _opts$markUnspecified === undefined ? true : _opts$markUnspecified,
          _opts$suppressAmbient = opts.suppressAmbientDeclaration,
          suppressAmbientDeclaration = _opts$suppressAmbient === undefined ? false : _opts$suppressAmbient;


      var moduleId = packageName + '/' + (0, _path.relative)(moduleRoot, filename).replace('.js', '');
      meta.root = packageName;
      meta.moduleId = moduleId;
      meta.moduleExports = [];
      meta.moduleImports = [];
      meta.interfaces = [];
      meta.skipStack = [];
      meta.outpath = (0, _path.join)(typings, moduleId + '.d.ts');
      meta.suppressModulePath = suppressModulePath;
      meta.suppressComments = suppressComments;
      meta.ignoreMembers = ignoreMembers;
      meta.ignoreEmptyInterfaces = ignoreEmptyInterfaces;
      meta.ignoreEmptyClasses = ignoreEmptyClasses;
      meta.dryRun = dryRun;
      meta.markUnspecifiedAsOptional = markUnspecifiedAsOptional;
      meta.suppressAmbientDeclaration = suppressAmbientDeclaration;
      meta.nodeGenerator = (0, _generators.createNodeGenerator)(meta);

      file.metadata[symb] = meta;
    }
  };
}